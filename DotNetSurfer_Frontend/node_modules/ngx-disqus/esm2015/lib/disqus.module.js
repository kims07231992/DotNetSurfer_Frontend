/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { DisqusComponent } from './disqus.component';
import { DisqusService } from './disqus.service';
import { SHORTNAME } from './disqus.token';
import { WINDOW_PROVIDERS, WINDOW } from './window.service';
/**
 * Initialize Disqus with shortname
 * @param {?} shortname
 * @param {?} window
 * @return {?}
 */
export function DisqusFactory(shortname, window) {
    return new DisqusService(shortname, window);
}
export class DisqusModule {
    /**
     * @param {?} shortname
     * @return {?}
     */
    static forRoot(shortname) {
        return {
            ngModule: DisqusModule,
            providers: [
                WINDOW_PROVIDERS,
                { provide: SHORTNAME, useValue: shortname },
                {
                    provide: DisqusService,
                    useFactory: DisqusFactory,
                    deps: [SHORTNAME, WINDOW]
                },
            ]
        };
    }
}
DisqusModule.decorators = [
    { type: NgModule, args: [{
                declarations: [DisqusComponent],
                exports: [DisqusComponent]
            },] },
];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcXVzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1kaXNxdXMvIiwic291cmNlcyI6WyJsaWIvZGlzcXVzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7O0FBRzVELE1BQU0sd0JBQXdCLFNBQWlCLEVBQUUsTUFBVztJQUMxRCxNQUFNLENBQUMsSUFBSSxhQUFhLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0NBQzdDO0FBTUQsTUFBTTs7Ozs7SUFDSixNQUFNLENBQUMsT0FBTyxDQUFDLFNBQWlCO1FBQzlCLE1BQU0sQ0FBQztZQUNMLFFBQVEsRUFBRSxZQUFZO1lBQ3RCLFNBQVMsRUFBRTtnQkFDVCxnQkFBZ0I7Z0JBQ2hCLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFO2dCQUMzQztvQkFDRSxPQUFPLEVBQUUsYUFBYTtvQkFDdEIsVUFBVSxFQUFFLGFBQWE7b0JBQ3pCLElBQUksRUFBRSxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUM7aUJBQzFCO2FBQ0Y7U0FDRixDQUFDO0tBQ0g7OztZQWxCRixRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsZUFBZSxDQUFDO2dCQUMvQixPQUFPLEVBQUUsQ0FBQyxlQUFlLENBQUM7YUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEaXNxdXNDb21wb25lbnQgfSBmcm9tICcuL2Rpc3F1cy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEaXNxdXNTZXJ2aWNlIH0gZnJvbSAnLi9kaXNxdXMuc2VydmljZSc7XHJcbmltcG9ydCB7IFNIT1JUTkFNRSB9IGZyb20gJy4vZGlzcXVzLnRva2VuJztcclxuaW1wb3J0IHsgV0lORE9XX1BST1ZJREVSUywgV0lORE9XIH0gZnJvbSAnLi93aW5kb3cuc2VydmljZSc7XHJcblxyXG4vKiogSW5pdGlhbGl6ZSBEaXNxdXMgd2l0aCBzaG9ydG5hbWUgKi9cclxuZXhwb3J0IGZ1bmN0aW9uIERpc3F1c0ZhY3Rvcnkoc2hvcnRuYW1lOiBzdHJpbmcsIHdpbmRvdzogYW55KSB7XHJcbiAgcmV0dXJuIG5ldyBEaXNxdXNTZXJ2aWNlKHNob3J0bmFtZSwgd2luZG93KTtcclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtEaXNxdXNDb21wb25lbnRdLFxyXG4gIGV4cG9ydHM6IFtEaXNxdXNDb21wb25lbnRdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEaXNxdXNNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KHNob3J0bmFtZTogc3RyaW5nKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogRGlzcXVzTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBXSU5ET1dfUFJPVklERVJTLFxyXG4gICAgICAgIHsgcHJvdmlkZTogU0hPUlROQU1FLCB1c2VWYWx1ZTogc2hvcnRuYW1lIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogRGlzcXVzU2VydmljZSxcclxuICAgICAgICAgIHVzZUZhY3Rvcnk6IERpc3F1c0ZhY3RvcnksXHJcbiAgICAgICAgICBkZXBzOiBbU0hPUlROQU1FLCBXSU5ET1ddXHJcbiAgICAgICAgfSxcclxuICAgICAgXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19