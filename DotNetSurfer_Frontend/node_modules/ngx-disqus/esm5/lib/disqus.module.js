/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { DisqusComponent } from './disqus.component';
import { DisqusService } from './disqus.service';
import { SHORTNAME } from './disqus.token';
import { WINDOW_PROVIDERS, WINDOW } from './window.service';
/**
 * Initialize Disqus with shortname
 * @param {?} shortname
 * @param {?} window
 * @return {?}
 */
export function DisqusFactory(shortname, window) {
    return new DisqusService(shortname, window);
}
var DisqusModule = /** @class */ (function () {
    function DisqusModule() {
    }
    /**
     * @param {?} shortname
     * @return {?}
     */
    DisqusModule.forRoot = /**
     * @param {?} shortname
     * @return {?}
     */
    function (shortname) {
        return {
            ngModule: DisqusModule,
            providers: [
                WINDOW_PROVIDERS,
                { provide: SHORTNAME, useValue: shortname },
                {
                    provide: DisqusService,
                    useFactory: DisqusFactory,
                    deps: [SHORTNAME, WINDOW]
                },
            ]
        };
    };
    DisqusModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [DisqusComponent],
                    exports: [DisqusComponent]
                },] },
    ];
    return DisqusModule;
}());
export { DisqusModule };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcXVzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1kaXNxdXMvIiwic291cmNlcyI6WyJsaWIvZGlzcXVzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7Ozs7O0FBRzVELE1BQU0sd0JBQXdCLFNBQWlCLEVBQUUsTUFBVztJQUMxRCxNQUFNLENBQUMsSUFBSSxhQUFhLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0NBQzdDOzs7Ozs7OztJQU9RLG9CQUFPOzs7O0lBQWQsVUFBZSxTQUFpQjtRQUM5QixNQUFNLENBQUM7WUFDTCxRQUFRLEVBQUUsWUFBWTtZQUN0QixTQUFTLEVBQUU7Z0JBQ1QsZ0JBQWdCO2dCQUNoQixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRTtnQkFDM0M7b0JBQ0UsT0FBTyxFQUFFLGFBQWE7b0JBQ3RCLFVBQVUsRUFBRSxhQUFhO29CQUN6QixJQUFJLEVBQUUsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDO2lCQUMxQjthQUNGO1NBQ0YsQ0FBQztLQUNIOztnQkFsQkYsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQjs7dUJBZEQ7O1NBZWEsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERpc3F1c0NvbXBvbmVudCB9IGZyb20gJy4vZGlzcXVzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERpc3F1c1NlcnZpY2UgfSBmcm9tICcuL2Rpc3F1cy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgU0hPUlROQU1FIH0gZnJvbSAnLi9kaXNxdXMudG9rZW4nO1xyXG5pbXBvcnQgeyBXSU5ET1dfUFJPVklERVJTLCBXSU5ET1cgfSBmcm9tICcuL3dpbmRvdy5zZXJ2aWNlJztcclxuXHJcbi8qKiBJbml0aWFsaXplIERpc3F1cyB3aXRoIHNob3J0bmFtZSAqL1xyXG5leHBvcnQgZnVuY3Rpb24gRGlzcXVzRmFjdG9yeShzaG9ydG5hbWU6IHN0cmluZywgd2luZG93OiBhbnkpIHtcclxuICByZXR1cm4gbmV3IERpc3F1c1NlcnZpY2Uoc2hvcnRuYW1lLCB3aW5kb3cpO1xyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0Rpc3F1c0NvbXBvbmVudF0sXHJcbiAgZXhwb3J0czogW0Rpc3F1c0NvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIERpc3F1c01vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3Qoc2hvcnRuYW1lOiBzdHJpbmcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBEaXNxdXNNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIFdJTkRPV19QUk9WSURFUlMsXHJcbiAgICAgICAgeyBwcm92aWRlOiBTSE9SVE5BTUUsIHVzZVZhbHVlOiBzaG9ydG5hbWUgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiBEaXNxdXNTZXJ2aWNlLFxyXG4gICAgICAgICAgdXNlRmFjdG9yeTogRGlzcXVzRmFjdG9yeSxcclxuICAgICAgICAgIGRlcHM6IFtTSE9SVE5BTUUsIFdJTkRPV11cclxuICAgICAgICB9LFxyXG4gICAgICBdXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iXX0=