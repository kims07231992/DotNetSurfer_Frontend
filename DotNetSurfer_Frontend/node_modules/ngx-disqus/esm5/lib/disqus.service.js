/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { SHORTNAME } from './disqus.token';
import { WINDOW } from './window.service';
var DisqusService = /** @class */ (function () {
    function DisqusService(shortname, _window) {
        this.shortname = shortname;
        this._window = _window;
    }
    Object.defineProperty(DisqusService.prototype, "DISQUS", {
        get: /**
         * @return {?}
         */
        function () {
            return this._window.DISQUS;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DisqusService.prototype, "disqus_config", {
        get: /**
         * @return {?}
         */
        function () {
            return this._window.disqus_config;
        },
        set: /**
         * @param {?} config
         * @return {?}
         */
        function (config) {
            this._window.disqus_config = config;
        },
        enumerable: true,
        configurable: true
    });
    DisqusService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    DisqusService.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [SHORTNAME,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [WINDOW,] }] }
    ]; };
    return DisqusService;
}());
export { DisqusService };
if (false) {
    /** @type {?} */
    DisqusService.prototype.shortname;
    /** @type {?} */
    DisqusService.prototype._window;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcXVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZGlzcXVzLyIsInNvdXJjZXMiOlsibGliL2Rpc3F1cy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDOztJQWlCeEMsdUJBQXVDLFNBQWlCLEVBQTBCLE9BQVk7UUFBdkQsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUEwQixZQUFPLEdBQVAsT0FBTyxDQUFLO0tBQzdGO0lBYkQsc0JBQUksaUNBQU07Ozs7UUFBVjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztTQUM1Qjs7O09BQUE7SUFFRCxzQkFBSSx3Q0FBYTs7OztRQUFqQjtZQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQztTQUNuQzs7Ozs7UUFFRCxVQUFrQixNQUFXO1lBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQztTQUNyQzs7O09BSkE7O2dCQVRGLFVBQVU7Ozs7NkNBZUssTUFBTSxTQUFDLFNBQVM7Z0RBQTZCLE1BQU0sU0FBQyxNQUFNOzt3QkFuQjFFOztTQUthLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU0hPUlROQU1FIH0gZnJvbSAnLi9kaXNxdXMudG9rZW4nO1xyXG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuL3dpbmRvdy5zZXJ2aWNlJztcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERpc3F1c1NlcnZpY2Uge1xyXG5cclxuICBnZXQgRElTUVVTKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5fd2luZG93LkRJU1FVUztcclxuICB9XHJcblxyXG4gIGdldCBkaXNxdXNfY29uZmlnKCk6IGFueSB7XHJcbiAgICByZXR1cm4gdGhpcy5fd2luZG93LmRpc3F1c19jb25maWc7XHJcbiAgfVxyXG5cclxuICBzZXQgZGlzcXVzX2NvbmZpZyhjb25maWc6IGFueSkge1xyXG4gICAgdGhpcy5fd2luZG93LmRpc3F1c19jb25maWcgPSBjb25maWc7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvciggQEluamVjdChTSE9SVE5BTUUpIHB1YmxpYyBzaG9ydG5hbWU6IHN0cmluZywgQEluamVjdChXSU5ET1cpIHByaXZhdGUgX3dpbmRvdzogYW55KSB7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0=